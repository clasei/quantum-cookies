{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction UserInputComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Wow, that's a lot! Let's try to make it short & sweet\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UserInputComponent {\n  constructor() {\n    this.userInput = '';\n    this.isMaxCharsReached = false;\n  }\n  adjustTextarea(event) {\n    let textarea = event.target;\n    textarea.style.overflow = 'hidden';\n    textarea.style.height = 'auto';\n    textarea.style.height = textarea.scrollHeight + 'px';\n    return;\n  }\n  checkMaxLength(event) {\n    if (event.target.value.length >= 200) {\n      this.isMaxCharsReached = true;\n    } else {\n      this.isMaxCharsReached = false;\n    }\n  }\n  static #_ = this.ɵfac = function UserInputComponent_Factory(t) {\n    return new (t || UserInputComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserInputComponent,\n    selectors: [[\"app-user-input\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[\"for\", \"userThoughts\"], [\"id\", \"userThoughts\", \"maxlength\", \"200\", \"placeholder\", \"Your thoughts start here\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"class\", \"error-msg\", 4, \"ngIf\"], [1, \"error-msg\"]],\n    template: function UserInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"label\", 0);\n        i0.ɵɵtext(1, \"What's on your mind today?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"textarea\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function UserInputComponent_Template_textarea_ngModelChange_2_listener($event) {\n          return ctx.userInput = $event;\n        })(\"input\", function UserInputComponent_Template_textarea_input_2_listener($event) {\n          ctx.checkMaxLength($event);\n          return ctx.adjustTextarea($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, UserInputComponent_p_3_Template, 2, 0, \"p\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.userInput);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isMaxCharsReached);\n      }\n    },\n    dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.MaxLengthValidator, i2.NgModel],\n    styles: [\"label[_ngcontent-%COMP%] {\\n  display: block;\\n  font-size: 1.1rem;\\n  font-weight: bold;\\n  color: black;\\n  background-color: yellow;\\n  border-radius: 5px;\\n  padding: 5px 20px;\\n  margin-bottom: 0.7rem;\\n}\\n\\ntextarea[_ngcontent-%COMP%] {\\n  width: 80%;\\n  max-width: 500px;\\n  min-height: 100px;\\n  border-radius: 15px;\\n  padding: 0.7rem;\\n  font-size: 1rem;\\n  resize: vertical;\\n}\\n\\n.error-msg[_ngcontent-%COMP%] {\\n  color: yellow;\\n  font-size: 0.8rem;\\n  margin-top: 0.7rem;\\n}\\n\\n@media only screen and (max-width: 600px) {\\n  textarea[_ngcontent-%COMP%] {\\n    width: 95%;\\n    font-size: 0.9rem;\\n  }\\n  label[_ngcontent-%COMP%] {\\n    font-size: 1rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91c2VyLWlucHV0L3VzZXItaW5wdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSx3QkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQkFBQTtBQUNKOztBQUVBO0VBQ0ksVUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUE7RUFDSTtJQUNJLFVBQUE7SUFDQSxpQkFBQTtFQUNOO0VBRUU7SUFDSSxlQUFBO0VBQU47QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDVweCAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC43cmVtO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDsgXHJcbiAgICBtaW4taGVpZ2h0OiAxMDBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICBwYWRkaW5nOiAwLjdyZW07XHJcbiAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICByZXNpemU6IHZlcnRpY2FsO1xyXG59XHJcblxyXG4uZXJyb3ItbXNnIHtcclxuICAgIGNvbG9yOiB5ZWxsb3c7XHJcbiAgICBmb250LXNpemU6IDAuOHJlbTtcclxuICAgIG1hcmdpbi10b3A6IDAuN3JlbTtcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gICAgdGV4dGFyZWEge1xyXG4gICAgICAgIHdpZHRoOiA5NSU7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgICB9XHJcblxyXG4gICAgbGFiZWwge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UserInputComponent","constructor","userInput","isMaxCharsReached","adjustTextarea","event","textarea","target","style","overflow","height","scrollHeight","checkMaxLength","value","length","_","_2","selectors","decls","vars","consts","template","UserInputComponent_Template","rf","ctx","ɵɵlistener","UserInputComponent_Template_textarea_ngModelChange_2_listener","$event","UserInputComponent_Template_textarea_input_2_listener","ɵɵtemplate","UserInputComponent_p_3_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\seijo\\Desktop\\all-code-stuff\\quantumCookies\\quantumCookies\\src\\app\\components\\user-input\\user-input.component.ts","C:\\Users\\seijo\\Desktop\\all-code-stuff\\quantumCookies\\quantumCookies\\src\\app\\components\\user-input\\user-input.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-user-input',\n  templateUrl: './user-input.component.html',\n  styleUrls: ['./user-input.component.scss']\n})\nexport class UserInputComponent {\n  userInput = '';\n  isMaxCharsReached = false;\n\n  adjustTextarea(event: Event): void {\n    let textarea: any = event.target;\n    textarea.style.overflow = 'hidden';\n    textarea.style.height = 'auto';\n    textarea.style.height = textarea.scrollHeight + 'px';\n    return;\n  }\n\n  checkMaxLength(event: any): void {\n    if(event.target.value.length >= 200) {\n      this.isMaxCharsReached = true;\n    } else {\n      this.isMaxCharsReached = false;\n    }\n  }   \n}\n","<label for=\"userThoughts\">What's on your mind today?</label>\n<textarea \n    id=\"userThoughts\" \n    [(ngModel)]=\"userInput\" \n    maxlength=\"200\" \n    (input)=\"checkMaxLength($event); adjustTextarea($event)\"\n    placeholder=\"Your thoughts start here\">\n</textarea>\n<p *ngIf=\"isMaxCharsReached\" class=\"error-msg\">\n    Wow, that's a lot! Let's try to make it short & sweet\n</p>\n"],"mappings":";;;;;ICQAA,EAAA,CAAAC,cAAA,WAA+C;IAC3CD,EAAA,CAAAE,MAAA,+DACJ;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADHJ,OAAM,MAAOC,kBAAkB;EAL/BC,YAAA;IAME,KAAAC,SAAS,GAAG,EAAE;IACd,KAAAC,iBAAiB,GAAG,KAAK;;EAEzBC,cAAcA,CAACC,KAAY;IACzB,IAAIC,QAAQ,GAAQD,KAAK,CAACE,MAAM;IAChCD,QAAQ,CAACE,KAAK,CAACC,QAAQ,GAAG,QAAQ;IAClCH,QAAQ,CAACE,KAAK,CAACE,MAAM,GAAG,MAAM;IAC9BJ,QAAQ,CAACE,KAAK,CAACE,MAAM,GAAGJ,QAAQ,CAACK,YAAY,GAAG,IAAI;IACpD;EACF;EAEAC,cAAcA,CAACP,KAAU;IACvB,IAAGA,KAAK,CAACE,MAAM,CAACM,KAAK,CAACC,MAAM,IAAI,GAAG,EAAE;MACnC,IAAI,CAACX,iBAAiB,GAAG,IAAI;KAC9B,MAAM;MACL,IAAI,CAACA,iBAAiB,GAAG,KAAK;;EAElC;EAAC,QAAAY,CAAA,G;qBAlBUf,kBAAkB;EAAA;EAAA,QAAAgB,EAAA,G;UAAlBhB,kBAAkB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP/B3B,EAAA,CAAAC,cAAA,eAA0B;QAAAD,EAAA,CAAAE,MAAA,iCAA0B;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5DH,EAAA,CAAAC,cAAA,kBAK2C;QAHvCD,EAAA,CAAA6B,UAAA,2BAAAC,8DAAAC,MAAA;UAAA,OAAAH,GAAA,CAAAtB,SAAA,GAAAyB,MAAA;QAAA,EAAuB,mBAAAC,sDAAAD,MAAA;UAEdH,GAAA,CAAAZ,cAAA,CAAAe,MAAA,CAAsB;UAAA,OAAEH,GAAA,CAAApB,cAAA,CAAAuB,MAAA,CAAsB;QAAA,EAFhC;QAI3B/B,EAAA,CAAAG,YAAA,EAAW;QACXH,EAAA,CAAAiC,UAAA,IAAAC,+BAAA,eAEI;;;QAPAlC,EAAA,CAAAmC,SAAA,GAAuB;QAAvBnC,EAAA,CAAAoC,UAAA,YAAAR,GAAA,CAAAtB,SAAA,CAAuB;QAKvBN,EAAA,CAAAmC,SAAA,GAAuB;QAAvBnC,EAAA,CAAAoC,UAAA,SAAAR,GAAA,CAAArB,iBAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}