{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../feynman-says.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UserInputComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \" Keep it simple, like a Feynman explanation \\u2014 under 420 characters will be ok\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let UserInputComponent = /*#__PURE__*/(() => {\n  class UserInputComponent {\n    constructor(feynmanSaysService) {\n      this.feynmanSaysService = feynmanSaysService;\n      this.userInput = '';\n      this.isMaxCharsReached = false;\n      this.isInputValid = false;\n      this.newQuote = new EventEmitter();\n    }\n    ngOnInit() {\n      this.validateInput();\n    }\n    adjustTextarea(event) {\n      const textarea = event.target;\n      textarea.style.overflow = 'hidden';\n      textarea.style.height = 'auto';\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    }\n    checkMaxLength(event) {\n      this.userInput = event.target.value;\n      this.validateInput();\n    }\n    generateFeynmanQuote() {\n      this.feynmanSaysService.getRandomQuote().subscribe(quote => {\n        console.log(quote); // debug: can be removed later\n        this.newQuote.emit(quote);\n      }, error => {\n        console.error('Error fetching quote', error);\n      });\n    }\n    validateInput() {\n      this.isMaxCharsReached = this.userInput.length >= 420;\n      this.isInputValid = this.userInput.length > 0 && !this.isMaxCharsReached;\n    }\n    static #_ = this.ɵfac = function UserInputComponent_Factory(t) {\n      return new (t || UserInputComponent)(i0.ɵɵdirectiveInject(i1.FeynmanSaysService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserInputComponent,\n      selectors: [[\"app-user-input\"]],\n      outputs: {\n        newQuote: \"newQuote\"\n      },\n      decls: 6,\n      vars: 3,\n      consts: [[\"for\", \"userThoughts\"], [\"id\", \"userThoughts\", \"maxlength\", \"420\", \"placeholder\", \"Your thoughts start here\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"class\", \"error-msg\", 4, \"ngIf\"], [3, \"disabled\", \"click\"], [1, \"error-msg\"]],\n      template: function UserInputComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"label\", 0);\n          i0.ɵɵtext(1, \"What's on your mind today?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"textarea\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function UserInputComponent_Template_textarea_ngModelChange_2_listener($event) {\n            return ctx.userInput = $event;\n          })(\"input\", function UserInputComponent_Template_textarea_input_2_listener($event) {\n            ctx.checkMaxLength($event);\n            return ctx.adjustTextarea($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, UserInputComponent_p_3_Template, 2, 0, \"p\", 2);\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function UserInputComponent_Template_button_click_4_listener() {\n            return ctx.generateFeynmanQuote();\n          });\n          i0.ɵɵtext(5, \"Check with Feynman\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.userInput);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isMaxCharsReached);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", !ctx.isInputValid);\n        }\n      },\n      dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.MaxLengthValidator, i3.NgModel],\n      styles: [\"label[_ngcontent-%COMP%]{display:block;font-size:1.1rem;font-weight:700;color:#000;background-color:#f5f5f5;border-radius:5px;padding:10px 25px;margin-bottom:1rem}textarea[_ngcontent-%COMP%]{width:80%;max-width:500px;min-height:100px;border-radius:15px;padding:.7rem;font-size:1rem;resize:vertical}.error-msg[_ngcontent-%COMP%]{color:#ff0;background-color:#2f4f4f;font-size:.8rem;padding:.3rem;margin-top:.7rem}button[_ngcontent-%COMP%]{background-color:#ff0;border:yellow;border-width:5px;border-radius:35px;color:#ff26c9;padding:15px 25px;text-decoration:underline;display:inline-block;font-size:16px;font-weight:700;margin:25px 5px;transition-duration:.4s;cursor:pointer}button[_ngcontent-%COMP%]:hover{background-color:#ff26c9;color:#ff0;border:5px solid rgb(255,38,201)}button[_ngcontent-%COMP%]:disabled{background-color:#2f4f4f;color:#aaa;cursor:not-allowed}@media only screen and (max-width: 600px){textarea[_ngcontent-%COMP%]{width:95%;font-size:.9rem}label[_ngcontent-%COMP%]{font-size:.9rem}.error-msg[_ngcontent-%COMP%]{font-size:.7rem}}\"]\n    });\n  }\n  return UserInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}